import pygame

# Màu sắc
WALL_COLOR = (0, 0, 255)
TILE_SIZE = 24 # Giữ nguyên kích thước ô hoặc điều chỉnh nếu cần để vừa màn hình

# Ma trận mô tả mê cung: 1 là tường, 0 là đường (bao gồm cả vị trí pellets và không gian nhà ma)
# Layout này được tạo dựa trên hình ảnh image_4b71cd.jpg (19 cột x 23 hàng)
MAZE_LAYOUT = [
    "1111111111111111111111111111",
    "1000000000000110000000000001",
    "1011110111110110111110111101",
    "1011110111110110111110111101",
    "1011110111110110111110111101",
    "1000000000000000000000000001",
    "1011110110111111110110111101",
    "1011110110111111110110111101",
    "1000000110000110000110000001",
    "1111110111110110111110111111",
    "0000010111110110111110100000",
    "0000010110000000000110100000",
    "0000010110111001110110100000",
    "1111110110100000010110111111",
    "0000000000100000010000000000",
    "1111110110100000010110111111",
    "0000010110111111110110100000",
    "0000010110000000000110100000",
    "0000010110111111110110100000",
    "1111110110111111110110111111",
    "1000000000000110000000000001",
    "1011110111110110111110111101",
    "1011110111110110111110111101",
    "1000110000000000000000110001",
    "1110110110111111110110110111",
    "1110110110111111110110110111",
    "1000000110000110000110000001",
    "1011111111110110111111111101",
    "1011111111110110111111111101",
    "1000000000000000000000000001",
    "1111111111111111111111111111",
]


# Giữ nguyên hàm draw_maze
def draw_maze(screen):
    """Vẽ mê cung lên màn hình dựa trên MAZE_LAYOUT."""
    for row_index, row in enumerate(MAZE_LAYOUT):
        # if len(row) != len(MAZE_LAYOUT[0]):
        #    print(f"Warning: Row {row_index} has inconsistent length.")
        #    continue
        for col_index, tile in enumerate(row):
            x = col_index * TILE_SIZE
            y = row_index * TILE_SIZE
            if tile == '1':
                pygame.draw.rect(screen, WALL_COLOR, (x, y, TILE_SIZE, TILE_SIZE))

